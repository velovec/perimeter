<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.v0rt3x.ctf</groupId>
    <artifactId>perimeter-core</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>v0rt3x :: Perimeter</name>

    <packaging>pom</packaging>

    <modules>
        <module>perimeter-server</module>
        <module>perimeter-agent</module>
        <module>perimeter-executor</module>
        <module>perimeter-configurator</module>
        <module>perimeter-judas</module>

        <module>themis-mock-server</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <docker.baseImage>openjdk:8-jre-stretch</docker.baseImage>
        <docker.repository>v0rt3x</docker.repository>

        <docker.skip.build>false</docker.skip.build>
        <docker.skip.push>false</docker.skip.push>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- UTILS -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.11</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.31</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>1.6</version>
            </dependency>
            <dependency>
                <groupId>com.hubspot.jinjava</groupId>
                <artifactId>jinjava</artifactId>
                <version>2.4.12</version>
            </dependency>

            <!-- SSH -->
            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-core</artifactId>
                <version>2.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.sshd</groupId>
                <artifactId>sshd-git</artifactId>
                <version>2.1.0</version>
            </dependency>
            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>0.1.55</version>
            </dependency>

            <!-- JWT -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>3.7.0</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>1.60</version>
            </dependency>

            <!-- METRICS -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>1.1.1</version>
            </dependency>

            <!-- DB -->
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>5.2.4</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>3.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.2.5.jre7</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>docker-build</id>
                            <phase>none</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <skip>${docker.skip.build}</skip>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>build</argument>
                                    <argument>-t</argument>
                                    <argument>${docker.repository}/${project.artifactId}:${project.version}</argument>
                                    <argument>-t</argument>
                                    <argument>${docker.repository}/${project.artifactId}:latest</argument>
                                    <argument>${project.build.directory}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>docker-push-snapshot</id>
                            <phase>none</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <skip>${docker.skip.push}</skip>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>push</argument>
                                    <argument>${docker.repository}/${project.artifactId}:${project.version}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>docker-push-latest</id>
                            <phase>none</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <skip>${docker.skip.push}</skip>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>push</argument>
                                    <argument>${docker.repository}/${project.artifactId}:latest</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>