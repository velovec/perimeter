server:
    port: 8080

management:
    endpoint:
        metrics:
            enabled: true
        prometheus:
            enabled: true
    endpoints:
        web:
            exposure:
                include: 'prometheus'
    metrics:
        export:
            prometheus:
                enabled: true

spring:
#    datasource:
#        type: com.zaxxer.hikari.HikariDataSource
#        url: jdbc:postgresql://127.0.0.1:5432/perimeter
#        username: postgres
#        password: P@ssw0rd
    jackson:
        date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
    mvc:
        favicon:
            enabled: false
    jpa:
        hibernate:
            use-new-id-generator-mappings: true
            ddl-auto: update
    flyway:
        enabled: false
    task:
        scheduling:
            pool:
                size: 10

logging:
    level:
        org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: ERROR
        ru.v0rt3x.perimeter.server.flag.FlagProcessor: INFO

perimeter:
    shell:
        host: 0.0.0.0
        port: 1488
        host-key: sshd/master.key
        auth-storage:
            path: sshd/auth.storage
            key: 706572696d65746572
    team:
        base-network: 10.20.30.32
        subnet-cidr: 31
        vulnbox-address: 2
        internal-ip: 127.0.0.1
        stats-port: 1936
        production-backend: prod
    flag:
        ttl: 300
        pattern: ^(?<flag>[a-fA-F0-9]{32}=)$
        jwt:
            enabled: true
            algorithm: EC256
            pattern: ^VolgaCTF\{(?<flag>.*)\}$
    exploit:
        execution-interval: 60000
    themis:
        host: 127.0.0.1
        port: 5000
        protocol: http
        integration-enabled: true
    agent:
        timeout: 20000
        delete-after: 100000
    git:
        root: git