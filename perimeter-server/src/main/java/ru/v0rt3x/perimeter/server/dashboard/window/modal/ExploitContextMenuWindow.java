package ru.v0rt3x.perimeter.server.dashboard.window.modal;

import ru.v0rt3x.perimeter.server.exploit.ExploitManager;
import ru.v0rt3x.perimeter.server.exploit.dao.Exploit;
import ru.v0rt3x.perimeter.server.flag.dao.FlagPriority;
import ru.v0rt3x.shell.curses.input.KeyCode;
import ru.v0rt3x.shell.curses.input.MouseKey;
import ru.v0rt3x.shell.curses.window.WindowManager;
import ru.v0rt3x.shell.curses.window.modal.ModalWindow;

import java.io.IOException;

import static ru.v0rt3x.shell.console.ansi.ConsoleColor.BLACK;
import static ru.v0rt3x.shell.console.ansi.ConsoleColor.BRIGHT_WHITE;
import static ru.v0rt3x.shell.console.ansi.ConsoleTextStyle.*;

public class ExploitContextMenuWindow extends ModalWindow {

    private Exploit exploit;

    public ExploitContextMenuWindow(WindowManager windowManager) {
        super(windowManager, "Exploit Menu", (windowManager.getCurses().getScreenHeight() - 9) / 2, (windowManager.getCurses().getScreenWidth() - 28) / 2, 10, 28, BLACK, BRIGHT_WHITE, null, 2);
    }

    public void setExploit(Exploit exploit) {
        this.exploit = exploit;
    }

    @Override
    protected void onMouseClick(MouseKey key, int x, int y) throws IOException {

    }

    @Override
    protected void onDraw() throws IOException {
        write(2, 2, BRIGHT_WHITE, BOLD, "Exploit: ");
        write(2, 11, BRIGHT_WHITE, NORMAL, exploit.getName());

        button(4, 2, "Execute", this::executeExploit);
        button(5, 2, "Set priority to LOW", () -> setPriority(FlagPriority.LOW));
        button(6, 2, "Set priority to NORMAL", () -> setPriority(FlagPriority.NORMAL));
        button(7, 2, "Set priority to HIGH", () -> setPriority(FlagPriority.HIGH));
    }

    private void executeExploit() throws IOException {
        context.getBean(ExploitManager.class).scheduleExploitExecution(exploit, false);

        hide();
        windowManager.draw(true);
    }

    private void setPriority(FlagPriority priority) throws IOException {
        exploit.setPriority(priority);
        context.getBean(ExploitManager.class).updateExploit(exploit);

        hide();
        windowManager.draw(true);
    }

    @Override
    protected void onKeyPress(KeyCode keyCode) throws IOException {

    }
}
